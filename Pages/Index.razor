@page "/"
@using System.Text.RegularExpressions;
@attribute [Microsoft.AspNetCore.Authorization.AllowAnonymous]

<head>
    <link href="css/site.css" rel="stylesheet" />
</head>

<style>
    html {
        overflow-y: scroll;
    }
</style>

@if (!m_httpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
{
    //m_uriHelper.NavigateTo("Identity/Account/Login");
}

<h1 class="mat">Karma</h1>

<p class="mat">Ready to aquire karma points by helping out others?</p>

<MatTextField @bind-Value="@filterValue" OnInput="@(e => filterValue = e.Value.ToString())" Label="Search Events" Icon="search" IconTrailing="true"></MatTextField>

<div class="card-deck">
    @foreach (var karmaEvent in SearchForEvents())
    {
        <MatCard class="demo-mat-card mx-3">
            <div class="demo-mat-card-content">
                <MatHeadline6 class="demo-mat-card-clean-margin">
                    @karmaEvent.Name
                </MatHeadline6>
            </div>
            <MatCardContent>
                <MatCardMedia Wide="true" ImageUrl=@karmaEvent.PhotoPath @onclick="()=>NavigateToIndividualEvent(karmaEvent.Id)"></MatCardMedia>
                <MatBody2 class="demo-mat-card-content demo-mat-card-clean-margin">
                    @karmaEvent.Description
                </MatBody2>
            </MatCardContent>
			@if(CurrentUserId == null) {
			<MatButton Raised="true" class="btn btn-primary element" @onclick="()=>RegisterToEvent(karmaEvent.Id)">Register</MatButton>
		}
        </MatCard>
    }
</div>

<MatSelect Label="Page size" Value="@perPage" ValueChanged="async(int a) => await Refresh(a)">
    <MatOption TValue="int" Value="3">3</MatOption>
    <MatOption TValue="int" Value="5">5</MatOption>
    <MatOption TValue="int" Value="10">10</MatOption>
</MatSelect>
<Pagination TotaPagesQuantity="m_totalPageQuantity" CurrentPage="m_currentPage" Radius="2" SelectedPage="SelectedPage"></Pagination>

